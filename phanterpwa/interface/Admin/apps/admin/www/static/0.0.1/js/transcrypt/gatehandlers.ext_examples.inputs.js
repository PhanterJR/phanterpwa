// Transcrypt'ed from Python, 2020-04-22 07:11:32
import {AssertionError, AttributeError, BaseException, DeprecationWarning, Exception, IndexError, IterableError, KeyError, NotImplementedError, RuntimeWarning, StopIteration, UserWarning, ValueError, Warning, __JsIterator__, __PyIterator__, __Terminal__, __add__, __and__, __call__, __class__, __envir__, __eq__, __floordiv__, __ge__, __get__, __getcm__, __getitem__, __getslice__, __getsm__, __gt__, __i__, __iadd__, __iand__, __idiv__, __ijsmod__, __ilshift__, __imatmul__, __imod__, __imul__, __in__, __init__, __ior__, __ipow__, __irshift__, __isub__, __ixor__, __jsUsePyNext__, __jsmod__, __k__, __kwargtrans__, __le__, __lshift__, __lt__, __matmul__, __mergefields__, __mergekwargtrans__, __mod__, __mul__, __ne__, __neg__, __nest__, __or__, __pow__, __pragma__, __proxy__, __pyUseJsNext__, __rshift__, __setitem__, __setproperty__, __setslice__, __sort__, __specialattrib__, __sub__, __super__, __t__, __terminal__, __truediv__, __withblock__, __xor__, abs, all, any, assert, bool, bytearray, bytes, callable, chr, copy, deepcopy, delattr, dict, dir, divmod, enumerate, filter, float, getattr, hasattr, input, int, isinstance, issubclass, len, list, map, max, min, object, ord, pow, print, property, py_TypeError, py_iter, py_metatype, py_next, py_reversed, py_typeof, range, repr, round, set, setattr, sorted, str, sum, tuple, zip} from './org.transcrypt.__runtime__.js';
import * as codemirror from './plugins.codemirror.js';
import * as helpers from './phanterpwa.apptools.helpers.js';
import * as widgets from './phanterpwa.apptools.components.widgets.js';
var __name__ = 'gatehandlers.ext_examples.inputs';
export var DIV = helpers.XmlConstructor.tagger ('div');
export var LABEL = helpers.XmlConstructor.tagger ('label');
export var I = helpers.XmlConstructor.tagger ('i');
export var H2 = helpers.XmlConstructor.tagger ('h2');
export var FORM = helpers.XmlConstructor.tagger ('form');
export var SPAN = helpers.XmlConstructor.tagger ('span');
export var IMG = helpers.XmlConstructor.tagger ('img', true);
export var HR = helpers.XmlConstructor.tagger ('hr', true);
export var UL = helpers.XmlConstructor.tagger ('ul');
export var STRONG = helpers.XmlConstructor.tagger ('strong');
export var LI = helpers.XmlConstructor.tagger ('li');
export var INPUT = helpers.XmlConstructor.tagger ('input', true);
export var BR = helpers.XmlConstructor.tagger ('br', true);
export var P = helpers.XmlConstructor.tagger ('p');
export var A = helpers.XmlConstructor.tagger ('a');
export var I18N = helpers.I18N;
export var CONCATENATE = helpers.CONCATENATE;
export var XML = helpers.XML;
export var XSECTION = helpers.XSECTION;
export var text1 = '\nAll objects can be incorporated into Web pages, for this it is only necessary to use the <strong>html_to</strong>, <strong>append_to</strong> or <strong>insert_to</strong> methods, they can also be merged with the html helpers, directly or through variables, below an example of how to use and the necessary imports.\n';
export var text1_pt_br = '\nTodos os objetos podem ser incorporados em páginas da Web, para isto é só usar os métodos <strong>html_to</strong>, <strong>append_to</strong> ou <strong>insert_to</strong>, tambem podem ser mesclados com os helpers html, diretamente ou através de variáveis, abaixo um exemplo de como usar e os imports necessários.\n';
export var first_example1 = 'import phanterpwa.apptools.components.widgets as widgets\nimport phanterpwa.apptools.helpers as helpers\n\nDIV = helpers.XmlConstructor.tagger("div")\n\nhelper_instance = DIV(\n    widgets.Input(\n        "android",\n        label="Label Widget",\n        placeholder="Placeholder Widget",\n    ),\n    _class="widget_input_example"\n)\nhelper_instance.html_to("#your-container")\n\nnew_widget_instance = widgets.Input(\n    "other_identifier",\n    label="Label Widget"\n)\nnew_widget_instance.append_to("#your-container")\n\nusing_jquery = widgets.Input(\n    "other_identifier",\n    label="Label Widget"\n)\n\nelement_jquery = using_jquery.jquery()\njQuery("#your-container").append(element_jquery)\n\n';
export var input1_source = 'import phanterpwa.apptools.components.widgets as widgets\nimport phanterpwa.apptools.helpers as helpers\n\nDIV = helpers.XmlConstructor.tagger("div")\n\nhelper_instance = DIV(\n    widgets.Input(\n        "android",\n        label="Label Widget",\n        placeholder="Placeholder Widget",\n    ),\n    _class="widget_input_example"\n)\nhelper_instance.html_to("#your-container")\n';
export var input2_source = 'import phanterpwa.apptools.components.widgets as widgets\nimport phanterpwa.apptools.helpers as helpers\n\nDIV = helpers.XmlConstructor.tagger("div")\n\nhelper_instance = DIV(\n    widgets.Input(\n        "shadows",\n        label="Label Widget",\n        placeholder="Placeholder Widget",\n        wear="shadows"\n    ),\n    _class="widget_input_example"\n)\nhelper_instance.html_to("#your-container")\n';
export var input3_source = 'import phanterpwa.apptools.components.widgets as widgets\nimport phanterpwa.apptools.helpers as helpers\n\nDIV = helpers.XmlConstructor.tagger("div")\n\nhelper_instance = DIV(\n    widgets.Input(\n        "elegant",\n        label="Label Widget",\n        placeholder="Placeholder Widget",\n        wear="elegant"\n    ),\n    _class="widget_input_example"\n)\nhelper_instance.html_to("#your-container")\n';
export var input4_source = '\n# your imports\n# your code\n\nyour_instance = widgets.Input(\n    "password",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    kind="password"\n)\n\n# your code\n';
export var input5_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "date",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    kind="date"\n)\n\n# your code\n';
export var input6_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "datetime",\n    label="Label Widget",\n    value="2020-02-02 03:12:33",\n    placeholder="Placeholder Widget",\n    kind="datetime"\n)\n\n# your code\n';
export var input7_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "datetime2",\n    label="Label Widget",\n    value="02/02/2020 03:12:33",\n    placeholder="Placeholder Widget",\n    kind="datetime",\n    format="dd/MM/yyyy HH:mm:ss"\n)\n\n# your code\n';
export var input8_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "iconify",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    icon=I(_class="fab fa-sistrix"),\n    icon_on_click=lambda: window.PhanterPWA.flash(**{"html": I18N("Fui Clicado!")})\n)\n\n# your code\n';
export var input_8_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "iconify_password",\n    label="Label Widget",\n    value="password",\n    kind="password",\n    placeholder="Placeholder Widget",\n    icon=I(_class="fab fa-sistrix")\n)\n\n# your code\n';
export var input9_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "iconify_datetime",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    kind="datetime",\n    icon=I(_class="far fa-calendar-alt")\n)\n\n# your code\n';
export var input10_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "iconify_date",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    kind="date",\n    icon=I(_class="far fa-calendar-alt"),\n    format="dd/MM/yyyy"\n)\n\n# your code\n';
export var Inputs =  __class__ ('Inputs', [object], {
	__module__: __name__,
	get __init__ () {return __get__ (this, function (self, gatehandler) {
		self.gatehandler = gatehandler;
		var html = CONCATENATE (DIV (DIV (DIV (DIV ('COMPONENTES', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), DIV ('INPUT', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), __kwargtrans__ ({_class: 'phanterpwa-breadcrumb-wrapper'})), __kwargtrans__ ({_class: 'p-container'})), __kwargtrans__ ({_class: 'title_page_container card'})), DIV (DIV (DIV (P (I18N (text1, __kwargtrans__ (dict ({'_pt-BR': text1_pt_br, 'sanitize': false})))), H2 (I18N ('Styles (waer)')), HR (), XSECTION (LABEL (I18N ('Example'), ' 01 (wear="android")'), DIV (STRONG (I18N ('Code'), ':'), codemirror.CodeMirrorHelper ('codemirror1', __kwargtrans__ (dict ({'value': input1_source, 'mode': 'python', 'lineNumbers': true}))), STRONG (I18N ('Results'), ':'), DIV (widgets.Input ('android', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget'})), __kwargtrans__ ({_class: 'widget_input_example'})), __kwargtrans__ ({_class: 'e-padding_10'}))), XSECTION (LABEL (I18N ('Example'), ' 02 (wear="shadows")'), DIV (STRONG (I18N ('Code'), ':'), codemirror.CodeMirrorHelper ('codemirror2', __kwargtrans__ (dict ({'value': input2_source, 'mode': 'python', 'lineNumbers': true}))), STRONG (I18N ('Results'), ':'), DIV (widgets.Input ('shadows', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', wear: 'shadows'})), __kwargtrans__ ({_class: 'widget_input_example'})), __kwargtrans__ ({_class: 'e-padding_10'}))), XSECTION (LABEL (I18N ('Example'), ' 03 (wear="elegant")'), DIV (STRONG (I18N ('Code'), ':'), codemirror.CodeMirrorHelper ('codemirror3', __kwargtrans__ (dict ({'value': input3_source, 'mode': 'python', 'lineNumbers': true}))), STRONG (I18N ('Results'), ':'), DIV (widgets.Input ('elegant', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', wear: 'elegant'})), __kwargtrans__ ({_class: 'widget_input_example'})), __kwargtrans__ ({_class: 'e-padding_10'}))), H2 (I18N ('Types (kind)')), HR (), XSECTION (LABEL (I18N ('Example'), ' 01 (kind="password")'), DIV (STRONG (I18N ('Code'), ':'), codemirror.CodeMirrorHelper ('codemirror4', __kwargtrans__ (dict ({'value': input4_source, 'mode': 'python', 'lineNumbers': true}))), STRONG (I18N ('Results'), ':'), DIV (widgets.Input ('password', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'password'})), __kwargtrans__ ({_class: 'widget_input_example'})), __kwargtrans__ ({_class: 'e-padding_10'}))), XSECTION (LABEL (I18N ('Example'), ' 02 (kind="date")'), DIV (STRONG (I18N ('Code'), ':'), codemirror.CodeMirrorHelper ('codemirror5', __kwargtrans__ (dict ({'value': input5_source, 'mode': 'python', 'lineNumbers': true}))), STRONG (I18N ('Results'), ':'), DIV (widgets.Input ('date', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'date'})), __kwargtrans__ ({_class: 'widget_input_example'})), __kwargtrans__ ({_class: 'e-padding_10'}))), XSECTION (LABEL (I18N ('Example'), ' 03 (kind="datetime")'), DIV (STRONG (I18N ('Code'), ':'), codemirror.CodeMirrorHelper ('codemirror6', __kwargtrans__ (dict ({'value': input6_source, 'mode': 'python', 'lineNumbers': true}))), STRONG (I18N ('Results'), ':'), DIV (widgets.Input ('datetime', __kwargtrans__ ({label: 'Label Widget', value: '2020-02-02 03:12:33', placeholder: 'Placeholder Widget', kind: 'datetime'})), __kwargtrans__ ({_class: 'widget_input_example'})), BR (), STRONG (I18N ('Code'), ':'), codemirror.CodeMirrorHelper ('codemirror7', __kwargtrans__ (dict ({'value': input7_source, 'mode': 'python', 'lineNumbers': true}))), STRONG (I18N ('Results'), ' (format="dd/MM/yyyy HH:mm:ss"):'), DIV (widgets.Input ('datetime2', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'datetime', value: '02/02/2020 03:12:33', format: 'dd/MM/yyyy HH:mm:ss'})), __kwargtrans__ ({_class: 'widget_input_example'})), __kwargtrans__ ({_class: 'e-padding_10'}))), H2 (I18N ('Iconify (icon)')), HR (), XSECTION (LABEL (I18N ('Example'), ' 01 (icon=I(_class="fab fa-sistrix"))'), DIV (widgets.Input ('iconify', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', icon: I (__kwargtrans__ ({_class: 'fab fa-sistrix'})), icon_on_click: (function __lambda__ () {
			return window.PhanterPWA.flash (__kwargtrans__ (dict ({'html': I18N ('Fui Clicado!')})));
		})})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror8', __kwargtrans__ (dict ({'value': input8_source, 'mode': 'python', 'lineNumbers': true})))), XSECTION (LABEL (I18N ('Example'), ' 02 (kind="password", icon=I(_class="fas fa-eye"))'), DIV (widgets.Input ('iconify_password', __kwargtrans__ ({label: 'Label Widget', value: 'password', placeholder: 'Placeholder Widget', kind: 'password', icon: I (__kwargtrans__ ({_class: 'fas fa-eye'}))})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror_8', __kwargtrans__ (dict ({'value': input_8_source, 'mode': 'python', 'lineNumbers': true})))), XSECTION (LABEL (I18N ('Example'), ' 03 (I(_class="far fa-calendar-alt") e kind="datetime"))'), P (I18N ('Neste exemplo adicionamos um ícone de calendário, observe que o parâmatro kind é datetime e não iremos adicionar uma ação ao botão, clique e veja o que acontece.')), DIV (widgets.Input ('iconify_datetime', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'datetime', icon: I (__kwargtrans__ ({_class: 'far fa-calendar-alt'}))})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror9', __kwargtrans__ (dict ({'value': input9_source, 'mode': 'python', 'lineNumbers': true})))), XSECTION (LABEL (I18N ('Example'), ' 04 (I(_class="far fa-calendar-alt"), kind="date") e format="dd/MM/yyyy")'), P (I18N ("Como você pode observar, com o kind='date', 'icon' definido e sem uma ação para o icon automaticamente foi utilizado o datetimepicker, agora vamos tentar com o date colocando format='dd/MM/yyyy'.")), DIV (widgets.Input ('iconify_date', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'date', icon: I (__kwargtrans__ ({_class: 'far fa-calendar-alt'})), format: 'dd/MM/yyyy', value: '01/03/1980'})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror10', __kwargtrans__ (dict ({'value': input10_source, 'mode': 'python', 'lineNumbers': true})))), __kwargtrans__ ({_class: 'card e-padding_20'})), __kwargtrans__ ({_class: 'new-container'})), __kwargtrans__ ({_class: 'phanterpwa-container p-container'})));
		html.html_to ('#main-container');
	});}
});

//# sourceMappingURL=gatehandlers.ext_examples.inputs.map